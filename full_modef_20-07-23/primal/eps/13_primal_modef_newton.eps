%!PS-Adobe-2.0 EPSF-2.0
%%Title: ../eps/13_primal_modef_newton.eps
%%Creator: gnuplot 5.4 patchlevel 2
%%CreationDate: Sun Aug  6 19:35:56 2023
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -60 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.2 (Dec 2017)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto closepath gsave fill grestore stroke} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/Metrics {ExtendTextBox Gswidth} def
/Lwidth {currentpoint stroke M 0 vshift R Metrics} def
/Rwidth {currentpoint stroke M dup stringwidth pop neg vshift R Metrics} def
/Cwidth {currentpoint stroke M dup stringwidth pop -2 div vshift R Metrics} def
/GLwidth {currentpoint stroke M 0 vshift R {ExtendTextBox} forall} def
/GRwidth {currentpoint stroke M dup Gwidth vshift R {ExtendTextBox} forall} def
/GCwidth {currentpoint stroke M dup Gwidth 2 div vshift R {ExtendTextBox} forall} def
/GLwidth2 {0 Gwidth AddGlyphWidth} def
/GRwidth2 {Gwidth -1 mul 0 AddGlyphWidth} def
/GCwidth2 {Gwidth 2 div dup -1 mul AddGlyphWidth} def
/AddGlyphWidth { dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
                 dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse } def
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {Metrics pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get Gswidth pop -2 div
     dup 0 R} {dup 6 get Gswidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (../eps/13_primal_modef_newton.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.4 patchlevel 2)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sun Aug  6 19:35:56 2023)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt Sep 2016
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { dup type /stringtype eq
    { Boxing { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if }
    {} ifelse} def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PL PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 180 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
774 576 M
6101 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
774 576 M
63 0 V
6038 0 R
-63 0 V
stroke
666 576 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0)]
] -60.0 MRshow
/Helvetica findfont 180 scalefont setfont
/vshift -60 def
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
774 1433 M
6101 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
774 1433 M
63 0 V
6038 0 R
-63 0 V
stroke
666 1433 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 5)]
] -60.0 MRshow
/Helvetica findfont 180 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
774 2289 M
6101 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
774 2289 M
63 0 V
6038 0 R
-63 0 V
stroke
666 2289 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 10)]
] -60.0 MRshow
/Helvetica findfont 180 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
774 3146 M
6101 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
774 3146 M
63 0 V
6038 0 R
-63 0 V
stroke
666 3146 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 15)]
] -60.0 MRshow
/Helvetica findfont 180 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
774 4002 M
3986 0 V
2007 0 R
108 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
774 4002 M
63 0 V
6038 0 R
-63 0 V
stroke
666 4002 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 20)]
] -60.0 MRshow
/Helvetica findfont 180 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
774 4859 M
6101 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
774 4859 M
63 0 V
6038 0 R
-63 0 V
stroke
666 4859 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 25)]
] -60.0 MRshow
/Helvetica findfont 180 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
774 576 M
0 4283 V
stroke
1.000 UL
LTb
LCb setrgbcolor
774 576 M
0 63 V
0 4220 R
0 -63 V
stroke
774 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0)]
] -60.0 MCshow
/Helvetica findfont 180 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
1791 576 M
0 4283 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1791 576 M
0 63 V
0 4220 R
0 -63 V
stroke
1791 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 10)]
] -60.0 MCshow
/Helvetica findfont 180 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
2808 576 M
0 4283 V
stroke
1.000 UL
LTb
LCb setrgbcolor
2808 576 M
0 63 V
0 4220 R
0 -63 V
stroke
2808 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 20)]
] -60.0 MCshow
/Helvetica findfont 180 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
3825 576 M
0 4283 V
stroke
1.000 UL
LTb
LCb setrgbcolor
3825 576 M
0 63 V
0 4220 R
0 -63 V
stroke
3825 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 30)]
] -60.0 MCshow
/Helvetica findfont 180 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
4841 576 M
0 2600 V
0 1620 R
0 63 V
stroke
1.000 UL
LTb
LCb setrgbcolor
4841 576 M
0 63 V
0 4220 R
0 -63 V
stroke
4841 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 40)]
] -60.0 MCshow
/Helvetica findfont 180 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
5858 576 M
0 2600 V
0 1620 R
0 63 V
stroke
1.000 UL
LTb
LCb setrgbcolor
5858 576 M
0 63 V
0 4220 R
0 -63 V
stroke
5858 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 50)]
] -60.0 MCshow
/Helvetica findfont 180 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
6875 576 M
0 4283 V
stroke
1.000 UL
LTb
LCb setrgbcolor
6875 576 M
0 63 V
0 4220 R
0 -63 V
stroke
6875 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 60)]
] -60.0 MCshow
/Helvetica findfont 180 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
774 4859 N
774 576 L
6101 0 V
0 4283 V
-6101 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
171 2717 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 180.0 0.0 true true 0 (Induced Momentum Defect [kg m/s])]
] -60.0 MCshow
grestore
/Helvetica findfont 180 scalefont setfont
LTb
LCb setrgbcolor
3824 126 M
[ [(Helvetica) 180.0 0.0 true true 0 (Sweep [-])]
] -60.0 MCshow
/Helvetica findfont 180 scalefont setfont
LTb
% Begin plot #1
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
6056 4706 M
[ [(Helvetica) 180.0 0.0 true true 0 (1 interval)]
] -60.0 MRshow
/Helvetica findfont 180 scalefont setfont
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
6164 4706 M
495 0 V
876 576 M
876 576 Pls
6411 4706 Pls
% End plot #1
% Begin plot #2
1.000 UP
1.000 UL
LTb
LT1
LCb setrgbcolor
LCb setrgbcolor
6056 4526 M
[ [(Helvetica) 180.0 0.0 true true 0 (2 intervals)]
] -60.0 MRshow
/Helvetica findfont 180 scalefont setfont
1.000 UP
1.000 UL
LTb
LT1
LCb setrgbcolor
6164 4526 M
495 0 V
876 954 M
977 576 L
876 954 Pls
977 576 Pls
6411 4526 Pls
% End plot #2
% Begin plot #3
1.000 UP
1.000 UL
LTb
LT2
LCb setrgbcolor
LCb setrgbcolor
6056 4346 M
[ [(Helvetica) 180.0 0.0 true true 0 (3 intervals)]
] -60.0 MRshow
/Helvetica findfont 180 scalefont setfont
1.000 UP
1.000 UL
LTb
LT2
LCb setrgbcolor
6164 4346 M
495 0 V
876 1492 M
977 1006 L
1079 576 L
876 1492 Pls
977 1006 Pls
1079 576 Pls
6411 4346 Pls
% End plot #3
% Begin plot #4
1.000 UP
1.000 UL
LTb
LT3
LCb setrgbcolor
LCb setrgbcolor
6056 4166 M
[ [(Helvetica) 180.0 0.0 true true 0 (5 intervals)]
] -60.0 MRshow
/Helvetica findfont 180 scalefont setfont
1.000 UP
1.000 UL
LTb
LT3
LCb setrgbcolor
6164 4166 M
495 0 V
876 2305 M
977 1564 L
1079 970 L
1181 757 L
1282 576 L
876 2305 Pls
977 1564 Pls
1079 970 Pls
1181 757 Pls
1282 576 Pls
6411 4166 Pls
% End plot #4
% Begin plot #5
1.000 UP
2.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
6056 3986 M
[ [(Helvetica) 180.0 0.0 true true 0 (7 intervals)]
] -60.0 MRshow
/Helvetica findfont 180 scalefont setfont
1.000 UP
2.000 UL
LTb
LCb setrgbcolor
6164 3986 M
495 0 V
876 3065 M
977 1903 L
102 -673 V
1181 953 L
1282 840 L
1384 700 L
1486 576 L
876 3065 Pls
977 1903 Pls
1079 1230 Pls
1181 953 Pls
1282 840 Pls
1384 700 Pls
1486 576 Pls
6411 3986 Pls
% End plot #5
% Begin plot #6
1.000 UP
1.200 UL
LTb
[8.0 dl1 4.0 dl2 1.0 dl1 2.5 dl2 1.0 dl1 2.5 dl2 1.0 dl1 4.0 dl2 ] 0 setdash
LCb setrgbcolor
LCb setrgbcolor
6056 3806 M
[ [(Helvetica) 180.0 0.0 true true 0 (10 intervals)]
] -60.0 MRshow
/Helvetica findfont 180 scalefont setfont
1.000 UP
1.200 UL
LTb
[8.0 dl1 4.0 dl2 1.0 dl1 2.5 dl2 1.0 dl1 2.5 dl2 1.0 dl1 4.0 dl2 ] 0 setdash
LCb setrgbcolor
6164 3806 M
495 0 V
876 4155 M
977 2224 L
102 -775 V
102 -287 V
101 -145 V
102 -75 V
102 -74 V
1587 765 L
1689 661 L
102 -85 V
876 4155 Pls
977 2224 Pls
1079 1449 Pls
1181 1162 Pls
1282 1017 Pls
1384 942 Pls
1486 868 Pls
1587 765 Pls
1689 661 Pls
1791 576 Pls
6411 3806 Pls
% End plot #6
% Begin plot #7
1.000 UP
1.000 UL
LTb
LT6
LCb setrgbcolor
LCb setrgbcolor
6056 3626 M
[ [(Helvetica) 180.0 0.0 true true 0 (14 intervals)]
] -60.0 MRshow
/Helvetica findfont 180 scalefont setfont
1.000 UP
1.000 UL
LTb
LT6
LCb setrgbcolor
6164 3626 M
495 0 V
898 4859 M
977 2608 L
1079 1541 L
102 -135 V
101 -177 V
102 -119 V
102 -69 V
101 -49 V
102 -50 V
102 -65 V
102 -64 V
101 -97 V
102 -77 V
102 -63 V
977 2608 CircleF
1079 1541 CircleF
1181 1406 CircleF
1282 1229 CircleF
1384 1110 CircleF
1486 1041 CircleF
1587 992 CircleF
1689 942 CircleF
1791 877 CircleF
1893 813 CircleF
1994 716 CircleF
2096 639 CircleF
2198 576 CircleF
6411 3626 CircleF
% End plot #7
% Begin plot #8
1.000 UP
1.000 UL
LTb
LT7
LCb setrgbcolor
LCb setrgbcolor
6056 3446 M
[ [(Helvetica) 180.0 0.0 true true 0 (28 intervals)]
] -60.0 MRshow
/Helvetica findfont 180 scalefont setfont
1.000 UP
1.000 UL
LTb
LT7
LCb setrgbcolor
6164 3446 M
495 0 V
957 4859 M
977 3626 L
1079 2104 L
102 -449 V
101 -86 V
102 -162 V
102 44 V
101 -30 V
102 -162 V
102 18 V
102 -123 V
101 21 V
102 -84 V
102 12 V
101 -6 V
102 -80 V
102 7 V
101 -66 V
102 -13 V
102 -57 V
101 -19 V
102 -30 V
102 -65 V
101 -37 V
102 -52 V
102 -39 V
101 -33 V
102 -37 V
977 3626 TriU
1079 2104 TriU
1181 1655 TriU
1282 1569 TriU
1384 1407 TriU
1486 1451 TriU
1587 1421 TriU
1689 1259 TriU
1791 1277 TriU
1893 1154 TriU
1994 1175 TriU
2096 1091 TriU
2198 1103 TriU
2299 1097 TriU
2401 1017 TriU
2503 1024 TriU
2604 958 TriU
2706 945 TriU
2808 888 TriU
2909 869 TriU
3011 839 TriU
3113 774 TriU
3214 737 TriU
3316 685 TriU
3418 646 TriU
3519 613 TriU
3621 576 TriU
6411 3446 TriU
% End plot #8
% Begin plot #9
1.000 UP
1.000 UL
LTb
LT8
LCb setrgbcolor
LCb setrgbcolor
6056 3266 M
[ [(Helvetica) 180.0 0.0 true true 0 (56 intervals)]
] -60.0 MRshow
/Helvetica findfont 180 scalefont setfont
1.000 UP
1.000 UL
LTb
LT8
LCb setrgbcolor
6164 3266 M
495 0 V
876 576 M
74 4283 V
80 0 R
49 -1370 V
102 -848 V
101 -428 V
102 -210 V
102 -322 V
101 80 V
102 -60 V
102 -21 V
102 -42 V
101 -229 V
102 123 V
102 2 V
101 -16 V
102 -7 V
102 -193 V
101 103 V
102 -16 V
102 6 V
101 -154 V
102 119 V
102 -16 V
101 17 V
102 11 V
102 -61 V
101 101 V
102 81 V
102 59 V
102 87 V
101 16 V
102 130 V
102 76 V
101 140 V
102 44 V
102 134 V
101 120 V
102 92 V
102 104 V
101 5 V
102 119 V
102 105 V
101 115 V
102 75 V
102 -40 V
101 -38 V
102 -61 V
102 -99 V
101 -73 V
102 -178 V
102 -215 V
102 -318 V
101 -251 V
102 -312 V
102 -335 V
6468 576 L
876 576 TriUF
1079 3489 TriUF
1181 2641 TriUF
1282 2213 TriUF
1384 2003 TriUF
1486 1681 TriUF
1587 1761 TriUF
1689 1701 TriUF
1791 1680 TriUF
1893 1638 TriUF
1994 1409 TriUF
2096 1532 TriUF
2198 1534 TriUF
2299 1518 TriUF
2401 1511 TriUF
2503 1318 TriUF
2604 1421 TriUF
2706 1405 TriUF
2808 1411 TriUF
2909 1257 TriUF
3011 1376 TriUF
3113 1360 TriUF
3214 1377 TriUF
3316 1388 TriUF
3418 1327 TriUF
3519 1428 TriUF
3621 1509 TriUF
3723 1568 TriUF
3825 1655 TriUF
3926 1671 TriUF
4028 1801 TriUF
4130 1877 TriUF
4231 2017 TriUF
4333 2061 TriUF
4435 2195 TriUF
4536 2315 TriUF
4638 2407 TriUF
4740 2511 TriUF
4841 2516 TriUF
4943 2635 TriUF
5045 2740 TriUF
5146 2855 TriUF
5248 2930 TriUF
5350 2890 TriUF
5451 2852 TriUF
5553 2791 TriUF
5655 2692 TriUF
5756 2619 TriUF
5858 2441 TriUF
5960 2226 TriUF
6062 1908 TriUF
6163 1657 TriUF
6265 1345 TriUF
6367 1010 TriUF
6468 576 TriUF
6411 3266 TriUF
% End plot #9
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
774 4859 N
774 576 L
6101 0 V
0 4283 V
-6101 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
